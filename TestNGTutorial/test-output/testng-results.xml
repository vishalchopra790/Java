<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="12" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-05-08T12:05:09 IST" name="Testing" finished-at="2020-05-08T12:05:09 IST" duration-ms="182">
    <groups>
      <group name="smoke">
        <method signature="Class1.Demo()[pri:0, instance:test.Class1@402e37bc]" name="Demo" class="test.Class1"/>
        <method signature="Class4.Webloanlogin()[pri:0, instance:test.Class4@79ad8b2f]" name="Webloanlogin" class="test.Class4"/>
        <method signature="Class3.Webcarlogin()[pri:0, instance:test.Class3@229d10bd]" name="Webcarlogin" class="test.Class3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2020-05-08T12:05:09 IST" name="Pass" finished-at="2020-05-08T12:05:09 IST" duration-ms="182">
      <class name="test.Class2">
        <test-method is-config="true" signature="Demo2()[pri:0, instance:test.Class2@6b4a4e18]" started-at="2020-05-08T12:05:09 IST" name="Demo2" finished-at="2020-05-08T12:05:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo2 -->
      </class> <!-- test.Class2 -->
      <class name="test.Class1">
        <test-method signature="Demo()[pri:0, instance:test.Class1@402e37bc]" started-at="2020-05-08T12:05:09 IST" name="Demo" finished-at="2020-05-08T12:05:09 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method signature="prerequiste()[pri:0, instance:test.Class1@402e37bc]" started-at="2020-05-08T12:05:09 IST" name="prerequiste" finished-at="2020-05-08T12:05:09 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
      </class> <!-- test.Class1 -->
      <class name="test.Class4">
        <test-method signature="Apialoanlogin(java.lang.String, java.lang.String)[pri:0, instance:test.Class4@79ad8b2f]" started-at="2020-05-08T12:05:09 IST" name="Apialoanlogin" data-provider="getdata" finished-at="2020-05-08T12:05:09 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[first password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Apialoanlogin -->
        <test-method signature="Apialoanlogin(java.lang.String, java.lang.String)[pri:0, instance:test.Class4@79ad8b2f]" started-at="2020-05-08T12:05:09 IST" name="Apialoanlogin" data-provider="getdata" finished-at="2020-05-08T12:05:09 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[second username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[second password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Apialoanlogin -->
        <test-method signature="Apialoanlogin(java.lang.String, java.lang.String)[pri:0, instance:test.Class4@79ad8b2f]" started-at="2020-05-08T12:05:09 IST" name="Apialoanlogin" data-provider="getdata" finished-at="2020-05-08T12:05:09 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[third username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[third password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Apialoanlogin -->
        <test-method signature="Mobileloanlogin()[pri:0, instance:test.Class4@79ad8b2f]" started-at="2020-05-08T12:05:09 IST" name="Mobileloanlogin" finished-at="2020-05-08T12:05:09 IST" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:968)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at test.Class4.Mobileloanlogin(Class4.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobileloanlogin -->
        <test-method signature="Webloanlogin()[pri:0, instance:test.Class4@79ad8b2f]" started-at="2020-05-08T12:05:09 IST" name="Webloanlogin" finished-at="2020-05-08T12:05:09 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Webloanlogin -->
        <test-method is-config="true" signature="loan()[pri:0, instance:test.Class4@79ad8b2f]" started-at="2020-05-08T12:05:09 IST" name="loan" finished-at="2020-05-08T12:05:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loan -->
      </class> <!-- test.Class4 -->
    </test> <!-- Pass -->
    <test started-at="2020-05-08T12:05:09 IST" name="login" finished-at="2020-05-08T12:05:09 IST" duration-ms="147">
      <class name="test.Class3">
        <test-method is-config="true" signature="bfrsu()[pri:0, instance:test.Class3@229d10bd]" started-at="2020-05-08T12:05:09 IST" name="bfrsu" finished-at="2020-05-08T12:05:09 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfrsu -->
        <test-method is-config="true" signature="bm()[pri:0, instance:test.Class3@229d10bd]" started-at="2020-05-08T12:05:09 IST" name="bm" finished-at="2020-05-08T12:05:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="Webcarlogin()[pri:0, instance:test.Class3@229d10bd]" started-at="2020-05-08T12:05:09 IST" name="Webcarlogin" finished-at="2020-05-08T12:05:09 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Webcarlogin -->
        <test-method is-config="true" signature="bm()[pri:0, instance:test.Class3@229d10bd]" started-at="2020-05-08T12:05:09 IST" name="bm" finished-at="2020-05-08T12:05:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="login(java.lang.String)[pri:0, instance:test.Class3@229d10bd]" started-at="2020-05-08T12:05:09 IST" name="login" finished-at="2020-05-08T12:05:09 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.gogle.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="bm()[pri:0, instance:test.Class3@229d10bd]" started-at="2020-05-08T12:05:09 IST" name="bm" finished-at="2020-05-08T12:05:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method signature="Apicarlogin()[pri:0, instance:test.Class3@229d10bd]" started-at="2020-05-08T12:05:09 IST" name="Apicarlogin" finished-at="2020-05-08T12:05:09 IST" depends-on-methods="test.Class3.login, test.Class3.Webcarlogin" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Apicarlogin -->
      </class> <!-- test.Class3 -->
      <class name="test.Class1">
        <test-method is-config="true" signature="aftrsu()[pri:0, instance:test.Class1@402e37bc]" started-at="2020-05-08T12:05:09 IST" name="aftrsu" finished-at="2020-05-08T12:05:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftrsu -->
      </class> <!-- test.Class1 -->
    </test> <!-- login -->
  </suite> <!-- Testing -->
</testng-results>
